name: CI for macOS and Windows building with cabal
on:
  push:
    branches:
    - master
    - ci-*
    - release*
  pull_request:

jobs:

  cabal:
    name: Cabal
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
#        os: [macOS-latest, windows-2022]
        ghc:
#           - 8.10.7
#           - 9.0.2
          - 9.2.1
      fail-fast: false

    env:
      CONFIG: "--enable-tests --test-show-details=direct"

    steps:

    - name: Install MSYS2 shell
      if: ${{ runner.os == 'Windows' }}
      uses: msys2/setup-msys2@v2
      with:
        update: false
        release: false

    - name: Install the ICU library (Windows)
      if: ${{ runner.os == 'Windows' }}
      shell: msys2 {0}
      run: |
        pacman --noconfirm -S mingw-w64-x86_64-pkg-config mingw-w64-x86_64-icu

    # Installing ICU is not necessary, macOS-latest already has v69.1
    # - name: Install the ICU library
    #   shell: bash
    #   run: |
    #     brew install icu4c

    - name: Set up pkg-config for the ICU library (macOS)
      if: ${{ runner.os == 'macOS' }}
      shell: bash
      run: |
        echo "PKG_CONFIG_PATH=/usr/local/opt/icu4c/lib/pkgconfig" >> ${GITHUB_ENV}

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Haskell
      uses: haskell/actions/setup@v1
      id: setup-haskell-cabal
      with:
        ghc-version: ${{ matrix.ghc }}

    - name: Freeze
      run: |
        cabal freeze

    - name: Cache ~/.cabal/store
      uses: actions/cache@v2
      with:
        path: |
          ${{ steps.setup-haskell-cabal.outputs.cabal-store }}
          dist-newstyle
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('cabal.project.freeze') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.ghc }}-

    - name: Build
      run: |
        cabal configure $CONFIG
        cabal build all

    - name: Test
      if: ${{ runner.os == 'Windows' }}
      shell: msys2 {0}
      run: cabal test all $CONFIG
